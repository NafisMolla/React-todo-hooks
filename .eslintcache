[{"/Users/nafismolla/all-react-apps/todo-app-simple/src/index.js":"1","/Users/nafismolla/all-react-apps/todo-app-simple/src/App.js":"2","/Users/nafismolla/all-react-apps/todo-app-simple/src/todo.js":"3","/Users/nafismolla/all-react-apps/todo-app-simple/src/Todo.js":"4","/Users/nafismolla/all-react-apps/todo-app-simple/src/todoForm.js":"5","/Users/nafismolla/all-react-apps/todo-app-simple/src/TodoForm.js":"6"},{"size":145,"mtime":1612319045063,"results":"7","hashOfConfig":"8"},{"size":1119,"mtime":1612496179147,"results":"9","hashOfConfig":"8"},{"size":169,"mtime":1612323614770,"results":"10","hashOfConfig":"8"},{"size":470,"mtime":1612496157732,"results":"11","hashOfConfig":"8"},{"size":501,"mtime":1612408258626,"results":"12","hashOfConfig":"8"},{"size":524,"mtime":1612496398944,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1eib3cc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nafismolla/all-react-apps/todo-app-simple/src/index.js",[],["29","30"],"/Users/nafismolla/all-react-apps/todo-app-simple/src/App.js",["31"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./Todo.js\"\nimport TodoForm from \"./TodoForm\"\n\n\nfunction App() {\n\n    const [todo,setTodo] = useState([\n        {text: \"hello\",isComplete: true},\n        {text: \"hello\",isComplete: false},\n        {text: \"hello\",isComplete: false}\n    ]);\n\n\n\n    function addTodo(text){\n      const isComplete = false;\n      const temp = [...todo, {text,isComplete}]\n      setTodo(temp)\n    }\n\n    function removeTodo(index){\n      const temp = [...todo];\n      temp.splice(index,1);\n      setTodo(temp);\n    }\n\n    function completed(index){\n      const temp = [...todo];\n      temp.forEach((cur,count) => {\n        if(count == index){\n          temp[index].isComplete = !(temp[index].isComplete)\n        }\n      })\n      setTodo(temp); \n    }\n\n\n\n    return (\n        <div className=\"app\">\n          <div className=\"todo-list\">\n            {todo.map((todo,index) => <Todo todo={todo} index={index} removeTodo={removeTodo} completed={completed} />)}\n\n          </div>\n\n          <TodoForm addTodo={addTodo}/>\n\n        </div>\n      );\n\n}\n\nexport default App;\n","/Users/nafismolla/all-react-apps/todo-app-simple/src/todo.js",["32"],"/Users/nafismolla/all-react-apps/todo-app-simple/src/Todo.js",["33"],"import React, {useState} from \"react\";\n\nfunction Todo({todo,index,removeTodo,completed}){\n    return(\n    <div className=\"todo\" style={{textDecoration: todo.isComplete ? 'line-through' : 'none'}}> \n        {todo.text}\n        {console.log(removeTodo)}\n\n        <div>\n            <button onClick={() => removeTodo(index)} > Remove </button>\n            <button onClick={() => completed(index)} > complete </button>\n        </div>\n    </div>\n    );\n}\n\nexport default Todo;","/Users/nafismolla/all-react-apps/todo-app-simple/src/todoForm.js",["34","35"],"/Users/nafismolla/all-react-apps/todo-app-simple/src/TodoForm.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":32,"column":18,"nodeType":"42","messageId":"43","endLine":32,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":4,"column":19,"nodeType":"46","messageId":"47","endLine":4,"endColumn":27},{"ruleId":"49","severity":2,"message":"50","line":4,"column":31,"nodeType":"46","endLine":4,"endColumn":39},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setValue' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"todoForm\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation"]